#!/usr/bin/env node
'use strict';

var childProcess = require('child_process')
var phantomjs = require('phantomjs')
var program = require('commander')
var colors = require('colors')
var path = require('path')

var config = require('../config.json')
var meta = require('../package.json')
var util = require('../lib/util')

var binPath = phantomjs.path
var imgURI


program
    .version(meta.version)
    .arguments('<path> [otherPath...]')
    .option('-c, --char <charater>', 'set the char as the pixels of image')
    .option('-l, --left <left>', 'set the left position of image')
    .option('-w, --width <width>', 'set the width to render the image in terminal')
    .action(function (path, otherPath) {
        imgURI = path
    })
    .parse(process.argv)


if (!process.stdin.isTTY) {
    var stdin = ''
    process.stdin.on('readable', function() {
        var chunk = this.read()
        if (chunk !== null) {
            stdin += chunk
        }
    })
    process.stdin.on('end', function() {
        imgURI = stdin
        next()
    })
} else {
    next()
}
/**
 * Next step check img URI and run phantomjs
 */
function next() {
    if (!imgURI) {
        console.log('Please give a correct image URI !'.red)
        return;
    }
    childProcess.exec(binPath, [
            '--web-security=false',
            '--disk-cache=true',
            '--ssl-protocol=any',
            '--ignore-ssl-errors=true',
            path.normalize(__dirname + '/../lib/runner.js'),    // phantom runner relative path
            encodeURIComponent(util.absoluteURI(imgURI)),       // asolute path of rendered image
            JSON.stringify({                                    // render options
                width: program.width || config.defaultWidth,
                char: program.char || config.char.default,
                left: program.left || config.defaultLeft
            }),
            encodeURIComponent(__dirname),                      // current module work director
            '../'                                               // the relative path of the root work director
        ], 
        function(err, stdout, stderr) {
            if (err) console.log(err)
            else console.log(stdout)
    })
}


